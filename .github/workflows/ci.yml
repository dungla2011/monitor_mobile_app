name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

# Permissions needed for CI operations
permissions:
  contents: read

jobs:
  test:
    name: Code Quality & Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.3'
        channel: 'stable'
        cache: true
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Verify formatting
      run: dart format --output=none --set-exit-if-changed .
      
    - name: Analyze code
      run: flutter analyze
      
    - name: Generate mocks
      run: dart run build_runner build --delete-conflicting-outputs
      
    - name: Run unit tests
      run: flutter test --coverage
      
    - name: Check for available devices
      id: check_devices
      run: |
        devices=$(flutter devices --machine)
        echo "Available devices: $devices"
        if echo "$devices" | grep -q '"type":"device"'; then
          echo "has_device=true" >> $GITHUB_OUTPUT
        else
          echo "has_device=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Run integration tests
      if: steps.check_devices.outputs.has_device == 'true'
      run: flutter test integration_test/
      
    - name: Skip integration tests
      if: steps.check_devices.outputs.has_device == 'false'
      run: |
        echo "⚠️ Integration tests skipped - no physical devices available"
        echo "💡 To run integration tests locally:"
        echo "   1. Connect Android device or start iOS simulator"
        echo "   2. Run: flutter test integration_test/"
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: coverage/lcov.info
        name: flutter-coverage
        fail_ci_if_error: false
        
    - name: Generate test summary
      if: always()
      run: |
        echo "## 🧪 Test Results" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Code formatting: Passed" >> $GITHUB_STEP_SUMMARY  
        echo "- ✅ Code analysis: Passed" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Unit tests: Passed" >> $GITHUB_STEP_SUMMARY
        if [ "${{ steps.check_devices.outputs.has_device }}" == "true" ]; then
          echo "- ✅ Integration tests: Passed" >> $GITHUB_STEP_SUMMARY
        else
          echo "- ⚠️ Integration tests: Skipped (no devices)" >> $GITHUB_STEP_SUMMARY
        fi
        echo "- ✅ Coverage report: Generated" >> $GITHUB_STEP_SUMMARY
